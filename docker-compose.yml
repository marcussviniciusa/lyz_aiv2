version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: lyz_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-lyz_db}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - lyz_network
    labels:
      - "traefik.enable=false"

  minio:
    image: minio/minio
    container_name: lyz_minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-minioadmin}
    volumes:
      - minio_data:/data
    networks:
      - lyz_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.rule=Host(`minio.${DOMAIN:-localhost}`)"
      - "traefik.http.routers.minio.entrypoints=websecure"
      - "traefik.http.routers.minio.tls=true"
      - "traefik.http.routers.minio.service=minio"
      - "traefik.http.services.minio.loadbalancer.server.port=9000"
      - "traefik.http.routers.minio-console.rule=Host(`minio-console.${DOMAIN:-localhost}`)"
      - "traefik.http.routers.minio-console.entrypoints=websecure"
      - "traefik.http.routers.minio-console.tls=true"
      - "traefik.http.routers.minio-console.service=minio-console"
      - "traefik.http.services.minio-console.loadbalancer.server.port=9001"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: lyz_backend
    restart: unless-stopped
    depends_on:
      - postgres
      - minio
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-lyz_db}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_key_here}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-minioadmin}
      MINIO_BUCKET: ${MINIO_BUCKET:-lyz-files}
      CURSEDUCA_API_KEY: ${CURSEDUCA_API_KEY:-11803f0a8de22323b86b1edadc7afcd204150919}
      CURSEDUCA_API_URL: ${CURSEDUCA_API_URL:-https://prof.curseduca.pro}
      SUPERADMIN_EMAIL: ${SUPERADMIN_EMAIL:-admin@lyz.healthcare}
      SUPERADMIN_PASSWORD: ${SUPERADMIN_PASSWORD:-Admin@123}
      SUPERADMIN_NAME: ${SUPERADMIN_NAME:-Lyz Admin}
    networks:
      - lyz_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lyz-api.rule=Host(`api.${DOMAIN:-localhost}`)"
      - "traefik.http.routers.lyz-api.entrypoints=websecure"
      - "traefik.http.routers.lyz-api.tls=true"
      - "traefik.http.services.lyz-api.loadbalancer.server.port=3001"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: lyz_frontend
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${API_URL:-https://api.lyz.healthcare}
    networks:
      - lyz_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lyz-web.rule=Host(`${DOMAIN:-localhost}`)"
      - "traefik.http.routers.lyz-web.entrypoints=websecure"
      - "traefik.http.routers.lyz-web.tls=true"
      - "traefik.http.services.lyz-web.loadbalancer.server.port=3000"

  traefik:
    image: traefik:v2.9
    container_name: lyz_traefik
    restart: unless-stopped
    ports:
      - "80:80"     # HTTP
      - "443:443"   # HTTPS
      - "8080:8080" # Traefik Dashboard (Optional, can be removed in production)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/config:/etc/traefik
      - ./traefik/acme:/etc/traefik/acme
    command:
      - "--api.insecure=true"  # Only for development, remove in production
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/etc/traefik"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL:-admin@lyz.healthcare}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
    networks:
      - lyz_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN:-localhost}`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=traefik-auth"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_BASIC_AUTH:-admin:$$apr1$$q8eZFHjF$$Fvmkk//V6Btlaf2i/ju5n/}"

networks:
  lyz_network:
    driver: bridge

volumes:
  postgres_data:
  minio_data:
